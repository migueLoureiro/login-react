{"version":3,"sources":["logo.svg","components/loginbox/LoginBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","expectedUsername","expectedPassword","LoginBox","_ref","textBefore","textAfter","warning","welcomeMsg","username","setUsername","React","useState","password","setPassword","loginError","setLoginError","createElement","className","type","onClick","placeholder","name","required","onChange","e","target","value","handleLogin","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iOCIpCC,eAAmB,QACnBC,EAAmB,WAwERC,MAtEf,SAAiBC,GAEiE,IADhFC,WAAEA,EAAUC,UAAEA,EAASC,QAAEA,EAAOC,WAAEA,GAC4CJ,EAC9E,MAAOK,EAAUC,GAAeC,IAAMC,SAAS,KACxCC,EAAUC,GAAeH,IAAMC,SAAS,KACxCG,EAAYC,GAAiBL,IAAMC,SAAS,IA4DnD,MA1CmB,YAAfG,EAEAJ,IAAAM,cAAA,OAAKC,UAAU,YACbP,IAAAM,cAAA,SAAG,IAAET,GACLG,IAAAM,cAAA,UAAQE,KAAK,SAASC,QAASA,KAVnCV,EAAY,IACZI,EAAY,SACZE,EAAc,MAQ2C,WAMvDL,IAAAM,cAAA,OAAKC,UAAU,YACbP,IAAAM,cAAA,aAAO,IAAEZ,EAAW,KACpBM,IAAAM,cAAA,WACAN,IAAAM,cAAA,SACEE,KAAK,OACLE,YAAY,iBACZC,KAAK,QACLC,UAAQ,EACRC,SAAUC,GAAKf,EAAYe,EAAEC,OAAOC,SAEtChB,IAAAM,cAAA,WACAN,IAAAM,cAAA,SACEE,KAAK,WACLE,YAAY,iBACZC,KAAK,MACLC,UAAQ,EACRC,SAAUxB,GAAKc,EAAYd,EAAE0B,OAAOC,SAEtChB,IAAAM,cAAA,WAEAN,IAAAM,cAAA,UAAQE,KAAK,SAASC,QAASA,KA9CrC,SAAqBX,EAAkBI,GAGjCG,EAFCP,IAAaR,GAChBY,IAAaX,EACG,UAEF,qBAyCyB0B,CAAYnB,EAAUI,IAAW,SAGrD,qBAAfE,GACAJ,IAAAM,cAAA,KAAGC,UAAU,WAAWX,GAG1BI,IAAAM,cAAA,SAAIX,KCzCGuB,MArBf,WACE,OACElB,IAAAM,cAAA,OAAKC,UAAU,OACbP,IAAAM,cAAA,UAAQC,UAAU,cAChBP,IAAAM,cAAA,OAAKa,IAAKC,IAAMb,UAAU,WAAWc,IAAI,SACzCrB,IAAAM,cAAA,SAAG,iCAIHN,IAAAM,cAACd,EAAQ,CACPE,WAAW,yCACXC,UAAU,GACVE,WAAW,2BACXD,QAAQ,2BCJH0B,MAZUC,IACnBA,GAAeA,aAAuBC,UACxCpC,EAAA0B,EAAA,GAAAW,KAAArC,EAAAsC,KAAA,UAAqBD,KAAKhC,IAAiD,IAAhDkC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAStC,EACpEkC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCHDS,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHpC,IAAAM,cAACN,IAAMqC,WAAU,KACfrC,IAAAM,cAACY,EAAG,QAORI","file":"static/js/main.7ef63652.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import { warn } from 'console';\nimport React from 'react';\nimport './loginbox.css';\n\nvar expectedUsername = \"user\";\nvar expectedPassword = \"password\";\n\nfunction LoginBox(\n  { textBefore, textAfter, warning, welcomeMsg }: \n  { textBefore: string, textAfter: string, warning: string, welcomeMsg: string }) {\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n\n  function handleLogin(username: string, password: string) {\n    if ( username === expectedUsername &&\n      password === expectedPassword){\n        setLoginError(\"success\");\n    }else{\n      setLoginError(\"invalid password\");\n    }\n  }\n\n  function handleLogout() {\n    setUsername(\"\");\n    setPassword(\"\");\n    setLoginError(\"\");\n  }\n\n  var loginBox;\n  if (loginError === \"success\"){\n    loginBox = (\n      <div className=\"loginbox\">\n        <p> {welcomeMsg}</p>\n        <button type=\"submit\" onClick={() => handleLogout()}>Logout</button>\n      </div>\n    );\n  }else{\n\n    loginBox = (\n      <div className=\"loginbox\">\n        <label> {textBefore} </label>\n        <br></br>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Username\"\n          name=\"uname\"\n          required\n          onChange={e => setUsername(e.target.value)}\n        />\n        <br></br>\n        <input\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          name=\"psw\"\n          required\n          onChange={p => setPassword(p.target.value)}\n        />\n        <br></br>\n\n        <button type=\"submit\" onClick={() => handleLogin(username, password)}>Login</button>\n\n        {\n          loginError === \"invalid password\" &&\n          <p className=\"warning\">{warning}</p>\n        }\n\n        <p>{textAfter}</p>\n      </div>\n    );\n  }\n\n  return (\n    loginBox\n  );\n}\n\nexport default LoginBox;\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginBox from './components/loginbox/LoginBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Simple Login Example in React\n        </p>\n\n        <LoginBox\n          textBefore=\"Login with your username and password:\"\n          textAfter=\"\"\n          welcomeMsg=\"Welcome! redirecting....\"\n          warning=\"Invalid credentials\"\n        />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}